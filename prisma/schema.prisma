// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String                    @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                    String
  password                 String?
  UserAuth                 UserAuth?
  AuthToken                AuthToken?
  UserPasswordRecoveryAuth UserPasswordRecoveryAuth?
  UserGuessedWords         UserGuessedWords[]
}

model UserAuth {
  id      String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId  String  @unique @db.Uuid
  email   String
  pincode String?
  isValid Boolean @default(false)

  user User @relation(fields: [userId], references: [id])
}

model AuthToken {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId       String   @unique @db.Uuid
  accessToken  String   @unique
  refreshToken String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model UserPasswordRecoveryAuth {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId           String   @unique @db.Uuid
  email            String
  pincode          String?
  pincodeCreatedAt DateTime
  user             User     @relation(fields: [userId], references: [id])
}

enum WordType {
  sports
  animals
  science
  food
}

model Words {
  id               String             @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  word             String             @unique
  type             WordType
  level            Int
  UserGuessedWords UserGuessedWords[]
  WordHints        WordHints[]
}

model WordHints {
  id        String @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wordId    String @db.Uuid
  hint      String
  levelHint Int

  words Words @relation(fields: [wordId], references: [id])

  // Define a unique constraint for levelHint within a wordId
  @@unique([wordId, levelHint], name: "unique_level_hint_per_word_id")
  // Define a custom index for levelHint and wordId
  @@index([levelHint, wordId], name: "unique_level_hint_per_word")
}

model UserGuessedWords {
  id String @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  userId String @db.Uuid
  wordId String @db.Uuid

  words Words @relation(fields: [wordId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
}
